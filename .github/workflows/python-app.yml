# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3  # Checks out code, pulls it onto "runner"
    - name: Set up Python 3.8  # Error occured when == 3.8.3
      uses: actions/setup-python@v3
      with:  # configures above with additional argument python 3.8
        python-version: "3.8"  # gave it my version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # QEMU is for virtual machine?
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    # To be able to use Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # Log in without broadcasting my token
    - name: Loging in
      run: |
         echo $GITHUB_TOKEN | docker login ghcr.io -u USERNAME --password-stdin
    # Build it!
    - name: Build Docker
      run: |
        docker build -t legendary_db .
        docker tag legendary_db ghcr.io/jkrogsrud/legendary_db
        docker push ghcr.io/jkrogsrud/legendary_db
    # TODO: Run pytest in Docker image or before?
    - name: Test with pytest
      run: |
        pytest
